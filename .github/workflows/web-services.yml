name: Build, push and deploy web services
on:
  push:
    branches:
      - "develop"
      - "production"
    paths:
      - "services/api2/**"
      - "services/admin-console/**"
      - "services/terraform/**"
      - "services/strapi/**"
      - ".github/workflows/web-services.yml"
jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set current branch name
        id: currentbranch
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
      - name: Set short commit SHA
        id: shortcommit
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"
      - name: Set Docker image tag
        id: dockerimage
        run: echo "::set-output name=tag::${{ steps.currentbranch.outputs.branch }}-${{ steps.shortcommit.outputs.sha7 }}"
      - name: Echo Docker image tag
        run: echo ${{ steps.dockerimage.outputs.tag }}
      - name: Check out
        uses: actions/checkout@v2
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          export_default_credentials: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Configure Docker for gcloud
        run: gcloud auth configure-docker --quiet
      - name: Build and push API
        uses: docker/build-push-action@v2
        with:
          context: services/api2
          push: true
          tags: gcr.io/dersu-assistant/api:${{ steps.dockerimage.outputs.tag }}
      - name: Build and push Admin Console
        uses: docker/build-push-action@v2
        with:
          context: services/admin-console
          push: true
          tags: gcr.io/dersu-assistant/admin-console:${{ steps.dockerimage.outputs.tag }}
          build-args: |
            NODE_ENV=local
            REACT_APP_ENV=production
            REACT_APP_API_BASE_URL=https://${{ steps.currentbranch.outputs.branch }}-api.dersu.uz
      - name: Build and push Strapi
        uses: docker/build-push-action@v2
        with:
          context: services/strapi
          push: true
          tags: gcr.io/dersu-assistant/strapi:${{ steps.dockerimage.outputs.tag }}
      - name: Terraform init
        working-directory: services/terraform
        run: terraform init -input=false
      - name: Terraform select OR create workspace
        working-directory: services/terraform
        run: |
          terraform workspace select ${{ steps.currentbranch.outputs.branch }} || \
          terraform workspace new ${{ steps.currentbranch.outputs.branch }}
      - name: Terraform plan
        working-directory: services/terraform
        run: |
          terraform plan -input=false -out=tfplan \
          -var="dersu_api_docker_image_tag=${{ steps.dockerimage.outputs.tag }}" \
          -var="dersu_admin_console_docker_image_tag=${{ steps.dockerimage.outputs.tag }}" \
          -var="dersu_strapi_docker_image_tag=${{ steps.dockerimage.outputs.tag }}"
        env:
          TF_VAR_STRAPI_PASSWORD: ${{ secrets.STRAPI_PASSWORD }}
          TF_VAR_STRAPI_EMAIL: ${{ secrets.STRAPI_EMAIL }}
          TF_VAR_AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          TF_VAR_METEOBLUE_API_KEY: ${{ secrets.METEOBLUE_API_KEY }}
      - name: Terraform apply
        working-directory: services/terraform
        run: terraform apply -input=false tfplan
