# Test for deployment
name: API build, push and deploy
on:
  push:
    branches:
      - 'develop'
      - 'production'
    paths:
      - 'services/api/**'
      - 'services/terraform/**'
      - '.github/workflows/api.yml'
jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set current branch name
        id: currentbranch
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
      - name: Set short commit SHA
        id: shortcommit
        run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"
      - name: Set Docker image tag
        id: dockerimage
        run: echo "::set-output name=tag::${{ steps.currentbranch.outputs.branch }}-${{ steps.shortcommit.outputs.sha8 }}"
      - name: Echo Docker image tag
        run: echo ${{ steps.dockerimage.outputs.tag }}        
      - name: Check out
        uses: actions/checkout@v2
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          export_default_credentials: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Configure Docker for gcloud
        run: gcloud auth configure-docker --quiet
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: services/api
          push: true
          tags: gcr.io/dersu-assistant/api:${{ steps.dockerimage.outputs.tag }}
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.3
      - name: Terraform init
        working-directory: services/terraform
        run: terraform init -input=false
      - name: Terraform select workspace
        working-directory: services/terraform
        run: terraform workspace select ${{ steps.currentbranch.outputs.branch }}
      - name: Terraform plan 
        working-directory: services/terraform
        run: |
          terraform plan -input=false -out=tfplan \
          -var="dersu_api_docker_image_tag=${{ steps.dockerimage.outputs.tag }}"
      - name: Terraform apply
        working-directory: services/terraform
        run: terraform apply -input=false tfplan
