def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply from: project(':flutter_config').projectDir.getPath() + "/dotenv.gradle"

Project background_geolocation = project(':flutter_background_geolocation')
 apply from: "${background_geolocation.projectDir}/background_geolocation.gradle"



android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }


    lintOptions {
        checkReleaseBuilds false
    }

    defaultConfig {
        applicationId "uz.dersu.assistant.pilot"
        minSdkVersion 26
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        manifestPlaceholders = [
            'appAuthRedirectScheme': project.env.get("AUTH0_REDIRECT_SCHEME")
        ]
    }

    signingConfigs {
        release {
           storeFile file(project.env.get("ANDROID_JKS_PATH"))
           storePassword project.env.get("ANDROID_STORE_PASSWORD")
           keyAlias project.env.get("ANDROID_KEY_ALIAS")
           keyPassword project.env.get("ANDROID_KEY_PASSWORD")
        }
    }
    
    buildTypes {
        release {
          minifyEnabled true
          shrinkResources false
          useProguard true
          proguardFiles "${background_geolocation.projectDir}/proguard-rules.pro"
          signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.android.material:material:1.3.0'
}
