name: Android release
on: workflow_dispatch
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set current branch name
        id: currentbranch
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
      - name: Check out
        uses: actions/checkout@v2
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "2.5.0"
      - name: Get Flutter dependencies
        working-directory: app
        run: flutter pub get
      - name: Test
        working-directory: app
        run: flutter test
      - name: Lint
        working-directory: app
        run: flutter analyze
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          export_default_credentials: true
      - name: Get application configuration
        run: gcloud secrets versions access $SECRET_VERSION --secret="$SECRET_NAME" > app/.env
        env:
          SECRET_VERSION: ${{ steps.currentbranch.outputs.branch == 'develop' && 5 || 1 }}
          SECRET_NAME: ${{ steps.currentbranch.outputs.branch }}-app-configuration
      - name: Get JKS file for Android signing
        run: |
          gcloud secrets versions access $SECRET_VERSION --secret="$SECRET_NAME" > key.b64
          base64 -d key.b64 > app/android/app/sign/android-key.jks
        env:
          SECRET_VERSION: ${{ steps.currentbranch.outputs.branch == 'develop' && 2 || 1 }}
          SECRET_NAME: ${{ steps.currentbranch.outputs.branch }}-app-android-jks
      - name: Generate What Is New Files
        run: echo $GITHUB_SHA >> app/distribution/whatsnew/whatsnew-es-ES && cat app/distribution/whatsnew/whatsnew-es-ES
      - name: Build app bundle
        working-directory: app
        run: flutter build appbundle
      - name: Write SA KEY file
        run: echo $GCP_SA_KEY > ./sa-key.json
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1.0.15
        with:
          serviceAccountJson: ./sa-key.json
          packageName: uz.dersu.assistant.pilot
          releaseFiles: ${{ github.workspace }}/app/build/app/outputs/bundle/release/*.aab
          track: alpha
          inAppUpdatePriority: 0
          status: completed
          # userFraction: 1.0
          whatsNewDirectory: app/distribution/whatsnew
